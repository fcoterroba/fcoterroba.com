---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { getLanguageFromURL } from '../utils/i18n';

const allPosts = await getCollection('blog');

const finalPosts = allPosts;

const categories = [...new Set(finalPosts.map(post => post.data.category))];

const featuredPosts = finalPosts.filter(post => post.data.featured);
const regularPosts = finalPosts.filter(post => !post.data.featured);
---

<BaseLayout 
  title="blog - fcoterroba"
  description="stay updated with my latest projects, ideas, and writings on the internet."
  lang="es"
>
  <div>
    <section class="pt-32 pb-16 theme-bg">
      <div class="max-w-6xl mx-auto px-8 lg:px-12">
        <div class="text-center mb-16">
          <h1 class="text-6xl lg:text-8xl font-bold theme-text mb-8" data-es="blog" data-en="blog">
            blog
          </h1>
          <p class="text-2xl lg:text-3xl theme-text-70 max-w-4xl mx-auto leading-relaxed" data-es="pensamientos, ideas y experiencias sobre tecnolog√≠a y desarrollo" data-en="thoughts, ideas and experiences about technology and development">
            pensamientos, ideas y experiencias sobre tecnolog√≠a y desarrollo
          </p>
        </div>
      </div>
    </section>

    <section class="py-12 bg-gradient-to-br from-brand-light/5 to-brand-green/5">
      <div class="max-w-6xl mx-auto px-8 lg:px-12">
        <div class="flex flex-col lg:flex-row gap-8 items-center justify-between">
          <div class="flex-1 max-w-lg">
            <div class="relative group">
              <input 
                type="text" 
                id="search-input"
                placeholder="buscar posts..."
                data-es-placeholder="buscar posts..."
                data-en-placeholder="search posts..."
                class="w-full px-6 py-4 pl-14 pr-6 bg-white/90 dark:bg-gray-900/90 border-2 border-gray-200 dark:border-gray-700 rounded-3xl focus:outline-none focus:ring-4 focus:ring-brand-green/20 focus:border-brand-green transition-all duration-300 text-lg backdrop-blur-sm"
              />
              <div class="absolute inset-y-0 left-0 pl-6 flex items-center pointer-events-none">
                <svg class="h-6 w-6 text-gray-400 group-focus-within:text-brand-green transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
            </div>
          </div>

          <div class="flex flex-wrap gap-3">
            <button 
              class="category-filter px-6 py-3 rounded-full text-sm font-semibold transition-all duration-300 bg-brand-green text-white shadow-lg hover:shadow-xl hover:scale-105"
              data-category="all"
            >
              todos
            </button>
            {categories.map((category) => (
              <button 
                class="category-filter px-6 py-3 rounded-full text-sm font-semibold transition-all duration-300 bg-white/90 dark:bg-gray-900/90 text-gray-700 dark:text-gray-300 hover:bg-brand-green hover:text-white shadow-lg hover:shadow-xl hover:scale-105 backdrop-blur-sm"
                data-category={category}
              >
                {category}
              </button>
            ))}
          </div>
        </div>
      </div>
    </section>

    <section class="py-16 bg-gradient-to-br from-brand-light/5 to-brand-green/5">
      <div class="max-w-6xl mx-auto px-8 lg:px-12">
        <div class="flex items-center gap-4 mb-12">
          <div class="w-12 h-12 bg-gradient-to-br from-brand-green/20 to-brand-light/30 rounded-2xl flex items-center justify-center">
            <span class="text-2xl">üìù</span>
          </div>
          <h2 class="text-3xl font-bold theme-text" data-es="todos los posts" data-en="all posts">
            todos los posts
          </h2>
        </div>
        <div id="posts-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {finalPosts.map((post) => (
            <article class="group bg-white/90 dark:bg-gray-900/90 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 hover:scale-105 border border-gray-200 dark:border-gray-700 backdrop-blur-sm" data-category={post.data.category} data-lang={post.data.lang}>
              {/* Post Image */}
              {post.data.coverImage && (
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={post.data.coverImage} 
                    alt={post.data.title}
                    class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                  />
                </div>
              )}
              
              <div class="p-6">
                <div class="flex items-center gap-3 mb-4">
                  <span class="px-3 py-1 bg-brand-green/20 text-brand-green text-xs font-semibold rounded-full">
                    {post.data.category}
                  </span>
                  <span class="text-sm theme-text-60 font-medium">{post.data.readTime}</span>
                </div>
                <h3 class="text-xl font-bold theme-text mb-3 group-hover:text-brand-green transition-colors leading-tight">
                  {post.data.title}
                </h3>
                <p class="text-sm theme-text-70 mb-4 leading-relaxed">
                  {post.data.excerpt}
                </p>
                <div class="flex items-center justify-between">
                  <span class="text-sm theme-text-60 font-medium">{new Date(post.data.date).toLocaleDateString()}</span>
                  <a 
                    href={`/blog/${post.slug}`}
                    class="text-brand-green font-semibold hover:underline transition-colors flex items-center gap-1"
                  >
                    <span data-es="leer m√°s" data-en="read more">leer m√°s</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  </div>

  <style>
    [data-theme="dark"] * {
      color: #ffffff !important;
    }
    
    [data-theme="dark"] .theme-text {
      color: #ffffff !important;
    }
    
    [data-theme="dark"] .theme-text-70 {
      color: #ffffff !important;
    }
    
    [data-theme="dark"] .theme-text-60 {
      color: rgba(255, 255, 255, 0.8) !important;
    }

    .blog-card {
      border: 1px solid rgba(16, 185, 129, 0.1);
    }

    .blog-card:hover {
      border-color: rgba(16, 185, 129, 0.3);
    }

    .transition-all {
      transition: all 0.3s ease;
    }

    .duration-300 {
      transition-duration: 300ms;
    }

    .duration-500 {
      transition-duration: 500ms;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('search-input') as HTMLInputElement;
      const categoryFilters = document.querySelectorAll('.category-filter') as NodeListOf<HTMLButtonElement>;
      const allPosts = Array.from(document.querySelectorAll('article[data-category]') as NodeListOf<HTMLElement>);

      let currentCategory = 'all';
      let currentSearch = '';
      let currentLang = document.documentElement.lang || 'es';

      function filterPosts() {
        allPosts.forEach(post => {
          const postCategory = post.dataset.category;
          const postTitle = post.querySelector('h3')?.textContent?.toLowerCase() || '';
          const postExcerpt = post.querySelector('p')?.textContent?.toLowerCase() || '';
          const searchTerm = currentSearch.toLowerCase();

          const postLang = post.dataset.lang || 'es';
          const matchesLanguage = postLang === currentLang;

          const matchesCategory = currentCategory === 'all' || postCategory === currentCategory;
          const matchesSearch = searchTerm === '' || 
            postTitle.includes(searchTerm) || 
            postExcerpt.includes(searchTerm);

          if (matchesLanguage && matchesCategory && matchesSearch) {
            post.style.display = 'block';
            post.style.animation = 'fadeIn 0.3s ease-in-out';
          } else {
            post.style.display = 'none';
          }
        });
      }

      function updateLanguage() {
        currentLang = document.documentElement.lang || 'es';
        filterPosts();
      }

      document.addEventListener('languageChanged', updateLanguage);

      searchInput?.addEventListener('input', function() {
        currentSearch = this.value;
        filterPosts();
      });

      categoryFilters.forEach(filter => {
        filter.addEventListener('click', function() {
          categoryFilters.forEach(f => {
            f.classList.remove('bg-brand-green', 'text-white', 'shadow-xl');
            f.classList.add('bg-white/90', 'dark:bg-gray-900/90', 'text-gray-700', 'dark:text-gray-300');
          });
          
          this.classList.remove('bg-white/90', 'dark:bg-gray-900/90', 'text-gray-700', 'dark:text-gray-300');
          this.classList.add('bg-brand-green', 'text-white', 'shadow-xl');

          currentCategory = this.dataset.category || 'all';
          filterPosts();
        });
      });

      filterPosts();
    });
  </script>

  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</BaseLayout>
